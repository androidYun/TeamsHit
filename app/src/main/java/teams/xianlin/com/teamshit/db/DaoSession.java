package teams.xianlin.com.teamshit.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig groupsDaoConfig;

    private final DaoConfig friendDaoConfig;

    private final DaoConfig messageUserDaoConfig;

    private final DaoConfig newFriendDaoConfig;

    private final GroupsDao groupsDao;

    private final NewFriendDao newFriendDao;

    private final MessageUserDao messageUserDao;

    private final FriendDao friendDao;


    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        groupsDaoConfig = daoConfigMap.get(GroupsDao.class).clone();
        groupsDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        messageUserDaoConfig = daoConfigMap.get(MessageUserDao.class).clone();
        messageUserDaoConfig.initIdentityScope(type);


        newFriendDaoConfig = daoConfigMap.get(NewFriendDao.class).clone();
        newFriendDaoConfig.initIdentityScope(type);

        groupsDao = new GroupsDao(groupsDaoConfig, this);

        newFriendDao = new NewFriendDao(newFriendDaoConfig, this);

        messageUserDao = new MessageUserDao(messageUserDaoConfig, this);

        friendDao = new FriendDao(friendDaoConfig, this);

        registerDao(Groups.class, groupsDao);

        registerDao(NewFriend.class, newFriendDao);

        registerDao(Friend.class, friendDao);

        registerDao(MessageUser.class, messageUserDao);
    }

    public void clear() {
        groupsDaoConfig.getIdentityScope().clear();

        newFriendDaoConfig.getIdentityScope().clear();

        messageUserDaoConfig.getIdentityScope().clear();

        friendDaoConfig.getIdentityScope().clear();
    }

    public GroupsDao getGroupsDao() {
        return groupsDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public MessageUserDao getMessageUserDao() {
        return messageUserDao;
    }

    public NewFriendDao getNewFriendDao() {
        return newFriendDao;
    }
}
